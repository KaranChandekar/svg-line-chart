{"version":3,"file":"line-chart.umd.js","sources":["../src/index.mjs"],"sourcesContent":["// @format\nimport htm from \"htm\";\nimport vhtml from \"vhtml\";\nimport {\n  eachMonthOfInterval,\n  isAfter,\n  isSameDay,\n  format,\n  isEqual\n} from \"date-fns\";\nimport { paramCase } from \"param-case\";\n\nconst html = htm.bind(vhtml);\n\nconst offsetX = 10;\nconst offsetY = 5;\n\nexport function plot(data, options) {\n  const { x, labels } = scaleDates(offsetX, options.width, data.x);\n\n  const { min, max } = getMinMax(data.y, options.margin);\n  const y = scalePoints(offsetY, options.height, min, max, data.y);\n  const yPoints = generateLabelRange(min, max, options.yDistance);\n  const yScaledLabels = scalePoints(offsetY, options.height, min, max, yPoints);\n\n  const l = polyline(x, y, options.line);\n\n  return html`\n      <svg viewBox=\"0 0 ${options.width} ${options.height}\">\n        <title>${options.title}</title>\n        ${renderAxis(\n          offsetX,\n          offsetX,\n          0,\n          options.height - offsetY,\n          options.xAxis\n        )}\n        ${renderAxis(\n          offsetX,\n          options.width,\n          options.height - offsetY,\n          options.height - offsetY,\n          options.yAxis\n        )}\n        ${axisLabel(\n          0,\n          (options.height - offsetY) / 2,\n          options.yLabel.name,\n          {\n            style: \"transform: rotate(-90deg);\",\n            ...options.yLabel\n          },\n          { style: \"transform: translate(-15%, 55%)\" }\n        )}\n        ${yPoints.map((p, i) => {\n          const scaledPoint = yScaledLabels[i];\n          // NOTE: +0.5 is to center text vertically\n          return axisLabel(offsetX / 1.5, scaledPoint + 0.5, p, options.yLabel);\n        })}\n        ${yScaledLabels.map(p => {\n          return renderAxis(offsetX, options.width, p, p, options.yLabel);\n        })}\n        ${labels.map(({ pos, name }) => {\n          return axisLabel(\n            pos,\n            options.height - offsetY / 2,\n            name,\n            options.xLabel\n          );\n        })}\n        ${labels.map(({ pos }, i) => {\n          // NOTE: We don't want to draw over the y axis, hence for the first\n          // element we don't draw.\n          if (i === 0) return;\n          return renderAxis(\n            pos,\n            pos,\n            0,\n            options.height - offsetY,\n            options.xLabel\n          );\n        })}\n        ${l}\n      </svg>\n    `;\n}\n\nexport function polyline(x, y, options) {\n  options = toParamCase(options);\n\n  if (x.length !== y.length) {\n    throw new Error(\n      `x and y parameters need to be of same length. They are not: x (${\n        x.length\n      }) and y (${y.length}).`\n    );\n  }\n\n  if (x.length === 0) {\n    throw new Error(\"Length of data x and y cannot be zero\");\n  }\n\n  let points = \"\";\n  for (let i = 0; i < x.length; i++) {\n    points += `${x[i]},${y[i]} `;\n  }\n\n  // NOTE: We pop the last character as it's an unneeded space.\n  points = points.slice(0, -1);\n\n  return html`\n    <polyline ...${options} points=${points}/>\n  `;\n}\n\nexport function sortRangeAsc(range) {\n  return range.sort((a, b) => a - b);\n}\n\nexport function countUnique(range, equalityOp) {\n  if (range.length < 2) {\n    return range.length;\n  }\n  let buckets = [[range[0]]];\n\n  // NOTE: We start at `1` as we've already put element `0` in the first\n  // bucket.\n  for (let i = 1; i < range.length; i++) {\n    const date = range[i];\n    let match;\n\n    for (let bucket of buckets) {\n      if (equalityOp(date, bucket[0])) {\n        match = bucket;\n      }\n    }\n    if (match) {\n      match.push(date);\n    } else {\n      buckets.push([date]);\n    }\n  }\n  return buckets.length;\n}\n\n// NOTE: Expects sorted `range` (ASC).\nexport function pointWidth(total, range, equalityOp) {\n  const count = countUnique(range, equalityOp);\n  return total / count;\n}\n\nexport function insertInto(range, candidates) {\n  let insertedAt = [];\n  let cCopy = [...candidates];\n\n  for (let i = 0; i < range.length; i++) {\n    const date = range[i];\n    for (let j = 0; j < cCopy.length; j++) {\n      const candidate = cCopy[j];\n\n      if (isEqual(date, candidate)) {\n        insertedAt.push(i);\n        cCopy.splice(j, 1);\n        i = 0;\n      } else if (isAfter(date, candidate)) {\n        insertedAt.push(i);\n        cCopy.splice(j, 1);\n        i = 0;\n      }\n    }\n  }\n\n  if (cCopy.length > 0) {\n    for (let i = range.length; i < range.length + cCopy.length; i++) {\n      insertedAt.push(i);\n    }\n  }\n\n  return insertedAt;\n}\n\nexport function scaleDates(from, to, range, equalityOp = isSameDay) {\n  range = sortRangeAsc(range);\n\n  const pWidth = pointWidth(to - from, range, equalityOp);\n  const x = range.map((d, i) => from + i * pWidth);\n\n  const months = eachMonthOfInterval({\n    start: range[0],\n    end: range[range.length - 1]\n  });\n  const insertedAt = insertInto(range, months);\n  const names = months.map(d => format(d, \"MMM yyyy\"));\n  const labels = insertedAt.map((i, j) => ({\n    pos: from + i * pWidth,\n    name: names[j]\n  }));\n\n  return { x, labels };\n}\n\nexport function getMinMax(range, margin = 0) {\n  const max = Math.max.apply(Math, range) + margin;\n  const min = Math.min.apply(Math, range) - margin;\n\n  return {\n    min,\n    max\n  };\n}\n\nexport function scalePoints(from, to, min, max, range) {\n  const minAllowed = from;\n  const maxAllowed = to;\n\n  // NOTE: For explaination see: https://stackoverflow.com/a/31687097/1263876\n  const scale = val =>\n    to -\n    from * 2 -\n    ((maxAllowed - minAllowed) * (val - min)) / (max - min) +\n    minAllowed;\n  return range.map(scale);\n}\n\nexport function toParamCase(obj) {\n  let pcObj = {};\n\n  Object.keys(obj).forEach(key => {\n    pcObj[paramCase(key)] = obj[key];\n  });\n\n  return pcObj;\n}\n\nexport function renderAxis(x1, x2, y1, y2, options) {\n  options = toParamCase(options);\n  return html`\n    <g ...${options}>\n      <line x1=${x1} x2=${x2} y1=${y1} y2=${y2}></line>\n    </g>\n  `;\n}\n\nexport function axisLabel(x, y, text, options, containerOptions) {\n  options = toParamCase(options);\n  return html`\n    <g ...${containerOptions}>\n      <text ...${options} x=${x} y=${y}>${text}</text>\n    </g>\n  `;\n}\n\nexport function generateLabelRange(min, max, distance) {\n  const labels = [];\n  const start = Math.floor(min);\n  for (let i = start; i <= max; i++) {\n    if (i % distance === 0) {\n      labels.push(i);\n    }\n  }\n\n  return labels;\n}\n"],"names":["html","htm","bind","vhtml","offsetX","offsetY","plot","data","options","x","labels","scaleDates","width","min","max","getMinMax","y","margin","scalePoints","height","yPoints","generateLabelRange","yDistance","yScaledLabels","l","polyline","line","title","renderAxis","xAxis","yAxis","axisLabel","yLabel","name","style","map","p","i","scaledPoint","pos","xLabel","toParamCase","length","Error","points","slice","sortRangeAsc","range","sort","a","b","countUnique","equalityOp","buckets","date","match","bucket","push","pointWidth","total","count","insertInto","candidates","insertedAt","cCopy","j","candidate","isEqual","splice","isAfter","from","to","isSameDay","pWidth","d","months","eachMonthOfInterval","start","end","names","format","Math","apply","minAllowed","maxAllowed","scale","val","obj","pcObj","Object","keys","forEach","key","paramCase","x1","x2","y1","y2","text","containerOptions","distance","floor"],"mappings":"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"}
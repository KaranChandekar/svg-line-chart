{"version":3,"file":"line-chart.umd.js","sources":["../src/index.mjs"],"sourcesContent":["// @format\nimport htm from \"htm\";\nimport vhtml from \"vhtml\";\nimport {\n  eachMonthOfInterval,\n  isAfter,\n  isSameDay,\n  format,\n  isEqual\n} from \"date-fns\";\nimport { paramCase } from \"param-case\";\n\nconst html = htm.bind(vhtml);\n\nconst offsetX = 10;\nconst offsetY = 5;\n\nexport function plot(data, options) {\n  const { x, labels } = scaleDates(offsetX, options.width, data.x);\n\n  const { min, max } = getMinMax(data.y, options.margin);\n  const y = scalePoints(offsetY, options.height, min, max, data.y);\n  const yPoints = generateLabelRange(min, max, options.yDistance);\n  const yScaledLabels = scalePoints(offsetY, options.height, min, max, yPoints);\n\n  const l = polyline(x, y, options.line);\n\n  return html`\n      <svg viewBox=\"0 0 ${options.width} ${options.height}\">\n        <title>${options.title}</title>\n        ${l}\n        ${renderAxis(\n          offsetX,\n          offsetX,\n          0,\n          options.height - offsetY,\n          options.xAxis\n        )}\n        ${renderAxis(\n          offsetX,\n          options.width,\n          options.height - offsetY,\n          options.height - offsetY,\n          options.yAxis\n        )}\n        ${axisLabel(\n          0,\n          (options.height - offsetY) / 2,\n          options.yLabel.name,\n          {\n            style: \"transform: rotate(-90deg);\",\n            ...options.yLabel\n          },\n          { style: \"transform: translate(-15%, 55%)\" }\n        )}\n        ${yPoints.map((p, i) => {\n          const scaledPoint = yScaledLabels[i];\n          // NOTE: +0.5 is to center text vertically\n          return axisLabel(offsetX / 1.5, scaledPoint + 0.5, p, options.yLabel);\n        })}\n        ${yScaledLabels.map(p => {\n          return renderAxis(offsetX, options.width, p, p, options.yLabel);\n        })}\n        ${labels.map(({ pos, name }) => {\n          return axisLabel(\n            pos,\n            options.height - offsetY / 2,\n            name,\n            options.xLabel\n          );\n        })}\n        ${labels.map(({ pos }) => {\n          return renderAxis(\n            pos,\n            pos,\n            0,\n            options.height - offsetY,\n            options.xLabel\n          );\n        })}\n      </svg>\n    `;\n}\n\nexport function polyline(x, y, options) {\n  options = toParamCase(options);\n\n  if (x.length !== y.length) {\n    throw new Error(\n      `x and y parameters need to be of same length. They are not: x (${\n        x.length\n      }) and y (${y.length}).`\n    );\n  }\n\n  if (x.length === 0) {\n    throw new Error(\"Length of data x and y cannot be zero\");\n  }\n\n  let points = \"\";\n  for (let i = 0; i < x.length; i++) {\n    points += `${x[i]},${y[i]} `;\n  }\n\n  // NOTE: We pop the last character as it's an unneeded space.\n  points = points.slice(0, -1);\n\n  return html`\n    <polyline ...${options} points=${points}/>\n  `;\n}\n\nexport function sortRangeAsc(range) {\n  return range.sort((a, b) => a - b);\n}\n\nexport function countUnique(range, equalityOp) {\n  if (range.length < 2) {\n    return range.length;\n  }\n  let buckets = [[range[0]]];\n\n  // NOTE: We start at `1` as we've already put element `0` in the first\n  // bucket.\n  for (let i = 1; i < range.length; i++) {\n    const date = range[i];\n    let match;\n\n    for (let bucket of buckets) {\n      if (equalityOp(date, bucket[0])) {\n        match = bucket;\n      }\n    }\n    if (match) {\n      match.push(date);\n    } else {\n      buckets.push([date]);\n    }\n  }\n  return buckets.length;\n}\n\n// NOTE: Expects sorted `range` (ASC).\nexport function pointWidth(total, range, equalityOp) {\n  const count = countUnique(range, equalityOp);\n  return total / count;\n}\n\nexport function insertInto(range, candidates) {\n  let insertedAt = [];\n  let cCopy = [...candidates];\n\n  for (let i = 0; i < range.length; i++) {\n    const date = range[i];\n    for (let j = 0; j < cCopy.length; j++) {\n      const candidate = cCopy[j];\n\n      if (isEqual(date, candidate)) {\n        insertedAt.push(i);\n        cCopy.splice(j, 1);\n        i = 0;\n      } else if (isAfter(date, candidate)) {\n        insertedAt.push(i);\n        cCopy.splice(j, 1);\n        i = 0;\n      }\n    }\n  }\n\n  if (cCopy.length > 0) {\n    for (let i = range.length; i < range.length + cCopy.length; i++) {\n      insertedAt.push(i);\n    }\n  }\n\n  return insertedAt;\n}\n\nexport function scaleDates(from, to, range, equalityOp = isSameDay) {\n  range = sortRangeAsc(range);\n\n  const pWidth = pointWidth(to - from, range, equalityOp);\n  const x = range.map((d, i) => from + i * pWidth);\n\n  const months = eachMonthOfInterval({\n    start: range[0],\n    end: range[range.length - 1]\n  });\n  const insertedAt = insertInto(range, months);\n  const names = months.map(d => format(d, \"MMM yyyy\"));\n  const labels = insertedAt.map((i, j) => ({\n    pos: from + i * pWidth,\n    name: names[j]\n  }));\n\n  return { x, labels };\n}\n\nexport function getMinMax(range, margin = 0) {\n  const max = Math.max.apply(Math, range) + margin;\n  const min = Math.min.apply(Math, range) - margin;\n\n  return {\n    min,\n    max\n  };\n}\n\nexport function scalePoints(from, to, min, max, range) {\n  const minAllowed = from;\n  const maxAllowed = to;\n\n  // NOTE: For explaination see: https://stackoverflow.com/a/31687097/1263876\n  const scale = val =>\n    to -\n    from * 2 -\n    ((maxAllowed - minAllowed) * (val - min)) / (max - min) +\n    minAllowed;\n  return range.map(scale);\n}\n\nexport function toParamCase(obj) {\n  let pcObj = {};\n\n  Object.keys(obj).forEach(key => {\n    pcObj[paramCase(key)] = obj[key];\n  });\n\n  return pcObj;\n}\n\nexport function renderAxis(x1, x2, y1, y2, options) {\n  options = toParamCase(options);\n  return html`\n    <g ...${options}>\n      <line x1=${x1} x2=${x2} y1=${y1} y2=${y2}></line>\n    </g>\n  `;\n}\n\nexport function axisLabel(x, y, text, options, containerOptions) {\n  options = toParamCase(options);\n  return html`\n    <g ...${containerOptions}>\n      <text ...${options} x=${x} y=${y}>${text}</text>\n    </g>\n  `;\n}\n\nexport function generateLabelRange(min, max, distance) {\n  const labels = [];\n  const start = Math.floor(min);\n  for (let i = start; i <= max; i++) {\n    if (i % distance === 0) {\n      labels.push(i);\n    }\n  }\n\n  return labels;\n}\n"],"names":["html","bind","offsetX","polyline","x","y","options","toParamCase","length","Error","points","i","slice","sortRangeAsc","range","sort","a","b","countUnique","equalityOp","buckets","date","match","bucket","push","pointWidth","total","insertInto","candidates","insertedAt","cCopy","j","candidate","isEqual","isAfter","splice","scaleDates","from","to","isSameDay","pWidth","map","d","months","eachMonthOfInterval","start","end","names","format","labels","pos","name","getMinMax","margin","max","Math","apply","min","scalePoints","minAllowed","maxAllowed","val","obj","pcObj","Object","keys","forEach","key","paramCase","renderAxis","x1","x2","y1","y2","axisLabel","text","containerOptions","generateLabelRange","distance","floor","data","width","height","yPoints","yDistance","yScaledLabels","l","line","title","xAxis","yAxis","yLabel","style","p","offsetY","xLabel"],"mappings":"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"}